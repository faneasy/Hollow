// Generated by CoffeeScript 1.7.1

/**
 * 
 * @date: 2014-02-23 08:44:03
 * @author: vfasky (vfasky@gmail.com)
 * @link: http://vfasky.com
 * @version: $Id$
 */

(function() {
  var buildLess, buildNodeDoc, fs, gulp, less, path, process, _buildLessTime, _buildNodeDocTime;

  gulp = require('gulp');

  process = require('child_process');

  path = require('path');

  fs = require('fs');

  less = require('less');

  _buildNodeDocTime = null;

  buildNodeDoc = function() {
    if (_buildNodeDocTime) {
      clearTimeout(_buildNodeDocTime);
    }
    _buildNodeDocTime = setTimeout(function() {
      process.exec('sudo jsdoc -c ./jsdoc.json', function(err, stdout, stderr) {
        if (err) {
          return console.log('error: ' + err);
        } else if (stdout) {
          return console.log('jsdoc error: ' + stdout);
        }
      });
    }, 1000);
  };

  _buildLessTime = null;

  buildLess = function() {
    var basePath, filePath;
    if (_buildLessTime) {
      clearTimeout(_buildLessTime);
    }
    basePath = path.join(__dirname, 'public', 'style');
    filePath = path.join(basePath, 'hollow.less');
    return _buildLessTime = setTimeout(function() {
      return fs.readFile(filePath, 'utf-8', function(err, lessStr) {
        var parser;
        parser = less.Parser;
        parser = new parser({
          paths: [basePath]
        });
        return parser.parse(lessStr, function(err, tree) {
          var css;
          if (err) {
            console.log(err);
            return;
          }
          css = tree.toCSS({
            compress: true
          });
          return fs.writeFile(path.join(basePath, 'hollow.css'), css, function(err) {
            if (err) {
              return console.log(err);
            }
          });
        });
      });
    }, 1000);
  };

  gulp.watch(['README.md', 'models/**', 'routes/**'], function(event) {
    return buildNodeDoc();
  });

  gulp.watch(['public/style/*.less'], function(event) {
    return buildLess();
  });

  gulp.task('default', function() {});

}).call(this);
