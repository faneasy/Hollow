// Generated by CoffeeScript 1.7.1

/**
 * session 中间件 
 * @date: 2014-03-04 21:47:25
 * @author: vfasky (vfasky@gmail.com)
 * @link: http://vfasky.com
 * @version: $Id$
 */

(function() {
  var SessionStore;

  SessionStore = (function() {
    function SessionStore(SessionModel) {
      this.SessionModel = SessionModel;
    }

    SessionStore.prototype.destroy = function(sid, callback) {
      var success;
      success = function(session) {
        if (session === null) {
          return callback();
        } else {
          return session.destroy().success(function() {
            return callback();
          }).error(function(err) {
            return callback(err);
          });
        }
      };
      return this.SessionModel.find({
        where: {
          sid: sid
        }
      }).success(success).error(function(err) {
        return callback(err);
      });
    };

    SessionStore.prototype.length = function(callback) {
      return this.SessionModel.count().success(function(count) {
        return callback(null, count);
      }).error(function(err) {
        return callback(err);
      });
    };

    SessionStore.prototype.get = function(sid, callback) {
      var success;
      success = function(session) {
        if (session) {
          return callback(null, JSON.parse(session.data));
        } else {
          return callback(null, null);
        }
      };
      return this.SessionModel.find({
        where: {
          sid: sid
        }
      }).success(success).error(function(err) {
        return callback(err);
      });
    };

    SessionStore.prototype.set = function(sid, data, callback) {
      return this.SessionModel.findOrCreate({
        sid: sid
      }, {
        data: JSON.stringify(data)
      }).success(function(session) {
        return callback(null, session);
      }).error(function(err) {
        return callback(err);
      });
    };

    return SessionStore;

  })();

  module.exports = function(connect) {
    SessionStore.prototype.__proto__ = connect.session.Store.prototype;
    return function(model) {
      return new SessionStore(model);
    };
  };

}).call(this);
